pipeline {
    agent any

    parameters {
        string(name: 'LEARNING_RATE', defaultValue: '0.001', description: 'Learning rate for model training')
        string(name: 'EPOCHS', defaultValue: '5', description: 'Number of training epochs')
    }

    environment {
        // Injected securely from Jenkins Credentials Manager
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')

        // Workspace-local cache and venv for isolation
        PIP_CACHE_DIR = "${WORKSPACE}\\.pip-cache"
        VENV_DIR      = "${WORKSPACE}\\.venv"
    }

    stages {
        stage('Setup Environment') {
            steps {
                bat '''
                echo === Setting up Python virtual environment ===
                if not exist "%VENV_DIR%" (
                    python -m venv "%VENV_DIR%"
                )
                call "%VENV_DIR%\\Scripts\\activate"
                python -m pip install --upgrade pip
                pip config set global.cache-dir "%PIP_CACHE_DIR%"
                pip install -r requirements.txt dvc[s3]
                '''
            }
        }

        stage('Update Hyperparameters') {
            steps {
                bat '''
                echo === Updating params.yaml with Jenkins parameters ===
                echo learning_rate: ${LEARNING_RATE} > params.yaml
                echo epochs: ${EPOCHS} >> params.yaml
                '''
            }
        }

        stage('Run DVC Pipeline') {
            steps {
                bat '''
                echo === Running DVC pipeline ===
                call "%VENV_DIR%\\Scripts\\activate"
                dvc pull
                dvc repro
                '''
            }
        }

        stage('Push Results') {
            steps {
                bat '''
                echo === Pushing results to GitHub and S3 ===
                call "%VENV_DIR%\\Scripts\\activate"

                rem Track updated parameters and outputs
                dvc add params.yaml
                git add .
                git commit -m "Run with lr=${LEARNING_RATE}, epochs=${EPOCHS}" || echo "No changes to commit"
                git push origin hyperparam-tuning

                rem Push all data, models, and metrics to S3
                dvc push

                rem Tag this run for traceability
                git tag -a "jenkins-lr${LEARNING_RATE}-ep${EPOCHS}" -m "Run with lr=${LEARNING_RATE}, epochs=${EPOCHS}"
                git push origin --tags
                '''
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/metrics.json', fingerprint: true
        }
    }
}
